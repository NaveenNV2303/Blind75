https://leetcode.com/problems/merge-k-sorted-lists/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if(lists.length < 1) return null;
        return divideAndConquer(lists, 0, lists.length-1);
    }
    private ListNode divideAndConquer(ListNode[] listArray, int start, int end){
        if(start == end) return listArray[start];
        int mid = start + (end-start)/2;
        ListNode l1 = divideAndConquer(listArray, start, mid);
        ListNode l2 = divideAndConquer(listArray, mid+1, end);
        return mergeTwoLists(l1,l2);
    }
    private ListNode mergeTwoLists(ListNode list1, ListNode list2){
        if(list1 == null) return list2;
        if(list2 == null) return list1;

        if(list1.val < list2.val){
            list1.next = mergeTwoLists(list1.next, list2);
            return list1;
        }else{
            list2.next = mergeTwoLists(list1, list2.next);
            return list2;
        }
    } 
}
