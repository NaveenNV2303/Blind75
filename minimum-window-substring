https://leetcode.com/problems/minimum-window-substring/

class Solution {
    public String minWindow(String s, String t) {
        if (s.length() < t.length()) return "";

        Map<Character, Integer> need = new HashMap<>();
        Map<Character, Integer> window = new HashMap<>();

        for(char c: t.toCharArray()){
            need.put(c,need.getOrDefault(c,0)+1);
        }

        int left = 0, right = 0;
        int start = 0;
        int valid = 0;
        int len = Integer.MAX_VALUE;    

        while(right < s.length()){
            char currentChar = s.charAt(right);
            right++;

            if(need.containsKey(currentChar)){
                window.put(currentChar, window.getOrDefault(currentChar, 0)+1);
                if(window.get(currentChar).equals(need.get(currentChar))){
                    valid++;
                }
            }

            while(valid == need.size()){
                
                if(right - left < len){
                    start = left;
                    len = right - left;
                }

                char d = s.charAt(left);
                left++;


                if(need.containsKey(d)){
                    if(window.get(d) <= need.get(d)){
                        valid--;
                    }
                    window.put(d, window.get(d)-1);
                }
            }
        }

        return len == Integer.MAX_VALUE ? "" : s.substring(start, start + len);
    }
}
