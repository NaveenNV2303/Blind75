https://leetcode.com/problems/word-search/

class Solution {
    public boolean exist(char[][] board, String word) {
        for(int i=0; i<board.length; i++){
            for(int j=0; j<board[0].length; j++){
                if(board[i][j] == word.charAt(0) && dfs(i,j,board,word,0)){
                    return true;
                }
            }
        }
        return false;
    }

    public boolean dfs(int i, int j, char[][] board, String word, int currentIndex){
        if(currentIndex == word.length()){
            return true;
        }
        if(i<0 || j<0 || i>=board.length || j>=board[0].length || word.charAt(currentIndex) != board[i][j]){
            return false;
        }        
        char temp = board[i][j];
        board[i][j] = '#';

        if(dfs(i+1, j, board, word, currentIndex+1) ||
        dfs(i-1, j, board, word, currentIndex+1) ||
        dfs(i, j+1, board, word, currentIndex+1) ||
        dfs(i, j-1, board, word, currentIndex+1)){
            return true;
        }
        board[i][j] = temp;
        return false;
    }
}
