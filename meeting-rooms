https://leetcode.com/problems/meeting-rooms/

class Solution {
    public boolean canAttendMeetings(int[][] intervals) {
        // Sort intervals by start time
        Arrays.sort(intervals, (a, b) -> Integer.compare(a[0], b[0]));

        // Check for overlap between consecutive intervals
        for (int i = 1; i < intervals.length; i++) {
            // If current meeting starts before previous one ends â†’ overlap
            if (intervals[i][0] < intervals[i - 1][1]) {
                return false;
            }
        }
        return true; // No overlap found
    }
}

Question
252. Meeting Rooms
Category: Easy
Topic: Intervals, Sorting
Companies: Amazon, Facebook, Google, etc.

ðŸ”¹ Problem Statement:
Given an array of meeting time intervals intervals where intervals[i] = [starti, endi], determine if a person could attend all meetings.

ðŸ”¹ Example 1:

Input:
intervals = [[0,30],[5,10],[15,20]]

Output:
false

Explanation:
There is a conflict between meetings: [0,30] overlaps with [5,10].


ðŸ”¹ Example 2:

Input:
intervals = [[7,10],[2,4]]

Output:
true

Explanation:
No meetings overlap.

